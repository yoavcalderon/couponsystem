{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/components/admin/admin.component.html","./src/app/components/company/company.component.html","./src/app/components/customer/customer.component.html","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.html","./src/app/components/layout/layout.component.html","./src/app/components/login/login.component.html","./src/app/components/main/main.component.html","./src/app/components/methods/adminMethods/add-company/add-company.component.html","./src/app/components/methods/adminMethods/add-customer/add-customer.component.html","./src/app/components/methods/adminMethods/delete-company/delete-company.component.html","./src/app/components/methods/adminMethods/delete-customer/delete-customer.component.html","./src/app/components/methods/adminMethods/get-all-companies/get-all-companies.component.html","./src/app/components/methods/adminMethods/get-all-customers/get-all-customers.component.html","./src/app/components/methods/adminMethods/get-one-company/get-one-company.component.html","./src/app/components/methods/adminMethods/get-one-customer/get-one-customer.component.html","./src/app/components/methods/adminMethods/update-company/update-company.component.html","./src/app/components/methods/adminMethods/update-customer/update-customer.component.html","./src/app/components/methods/companyMethods/add-coupon/add-coupon.component.html","./src/app/components/methods/companyMethods/delete-coupon/delete-coupon.component.html","./src/app/components/methods/companyMethods/get-company-coupons-category/get-company-coupons-category.component.html","./src/app/components/methods/companyMethods/get-company-coupons-price/get-company-coupons-price.component.html","./src/app/components/methods/companyMethods/get-company-coupons/get-company-coupons.component.html","./src/app/components/methods/companyMethods/update-coupon/update-coupon.component.html","./src/app/components/methods/customerMethods/get-all-coupons/get-all-coupons.component.html","./src/app/components/methods/customerMethods/get-customer-coupons-category/get-customer-coupons-category.component.html","./src/app/components/methods/customerMethods/get-customer-coupons-price/get-customer-coupons-price.component.html","./src/app/components/methods/customerMethods/get-customer-coupons/get-customer-coupons.component.html","./src/app/components/methods/customerMethods/get-customer-details/get-customer-details.component.html","./src/app/components/methods/customerMethods/purchase-coupon/purchase-coupon.component.html","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/admin/admin.component.css","./src/app/components/admin/admin.component.ts","./src/app/components/company/company.component.css","./src/app/components/company/company.component.ts","./src/app/components/customer/customer.component.css","./src/app/components/customer/customer.component.ts","./src/app/components/footer/footer.component.css","./src/app/components/footer/footer.component.ts","./src/app/components/header/header.component.css","./src/app/components/header/header.component.ts","./src/app/components/layout/layout.component.css","./src/app/components/layout/layout.component.ts","./src/app/components/login/login.component.css","./src/app/components/login/login.component.ts","./src/app/components/main/main.component.css","./src/app/components/main/main.component.ts","./src/app/components/methods/adminMethods/add-company/add-company.component.css","./src/app/components/methods/adminMethods/add-company/add-company.component.ts","./src/app/components/methods/adminMethods/add-customer/add-customer.component.css","./src/app/components/methods/adminMethods/add-customer/add-customer.component.ts","./src/app/components/methods/adminMethods/delete-company/delete-company.component.css","./src/app/components/methods/adminMethods/delete-company/delete-company.component.ts","./src/app/components/methods/adminMethods/delete-customer/delete-customer.component.css","./src/app/components/methods/adminMethods/delete-customer/delete-customer.component.ts","./src/app/components/methods/adminMethods/get-all-companies/get-all-companies.component.css","./src/app/components/methods/adminMethods/get-all-companies/get-all-companies.component.ts","./src/app/components/methods/adminMethods/get-all-customers/get-all-customers.component.css","./src/app/components/methods/adminMethods/get-all-customers/get-all-customers.component.ts","./src/app/components/methods/adminMethods/get-one-company/get-one-company.component.css","./src/app/components/methods/adminMethods/get-one-company/get-one-company.component.ts","./src/app/components/methods/adminMethods/get-one-customer/get-one-customer.component.css","./src/app/components/methods/adminMethods/get-one-customer/get-one-customer.component.ts","./src/app/components/methods/adminMethods/update-company/update-company.component.css","./src/app/components/methods/adminMethods/update-company/update-company.component.ts","./src/app/components/methods/adminMethods/update-customer/update-customer.component.css","./src/app/components/methods/adminMethods/update-customer/update-customer.component.ts","./src/app/components/methods/category-filter.pipe.ts","./src/app/components/methods/companyMethods/add-coupon/add-coupon.component.css","./src/app/components/methods/companyMethods/add-coupon/add-coupon.component.ts","./src/app/components/methods/companyMethods/delete-coupon/delete-coupon.component.css","./src/app/components/methods/companyMethods/delete-coupon/delete-coupon.component.ts","./src/app/components/methods/companyMethods/get-company-coupons-category/get-company-coupons-category.component.css","./src/app/components/methods/companyMethods/get-company-coupons-category/get-company-coupons-category.component.ts","./src/app/components/methods/companyMethods/get-company-coupons-price/get-company-coupons-price.component.css","./src/app/components/methods/companyMethods/get-company-coupons-price/get-company-coupons-price.component.ts","./src/app/components/methods/companyMethods/get-company-coupons/get-company-coupons.component.css","./src/app/components/methods/companyMethods/get-company-coupons/get-company-coupons.component.ts","./src/app/components/methods/companyMethods/update-coupon/update-coupon.component.css","./src/app/components/methods/companyMethods/update-coupon/update-coupon.component.ts","./src/app/components/methods/customerMethods/get-all-coupons/get-all-coupons.component.css","./src/app/components/methods/customerMethods/get-all-coupons/get-all-coupons.component.ts","./src/app/components/methods/customerMethods/get-customer-coupons-category/get-customer-coupons-category.component.css","./src/app/components/methods/customerMethods/get-customer-coupons-category/get-customer-coupons-category.component.ts","./src/app/components/methods/customerMethods/get-customer-coupons-price/get-customer-coupons-price.component.css","./src/app/components/methods/customerMethods/get-customer-coupons-price/get-customer-coupons-price.component.ts","./src/app/components/methods/customerMethods/get-customer-coupons/get-customer-coupons.component.css","./src/app/components/methods/customerMethods/get-customer-coupons/get-customer-coupons.component.ts","./src/app/components/methods/customerMethods/get-customer-details/get-customer-details.component.css","./src/app/components/methods/customerMethods/get-customer-details/get-customer-details.component.ts","./src/app/components/methods/customerMethods/purchase-coupon/purchase-coupon.component.css","./src/app/components/methods/customerMethods/purchase-coupon/purchase-coupon.component.ts","./src/app/components/methods/price-filter.pipe.ts","./src/app/models/Company.ts","./src/app/models/Coupon.ts","./src/app/models/Customer.ts","./src/app/services/admin.service.ts","./src/app/services/company.service.ts","./src/app/services/customer.service.ts","./src/app/services/login.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div>\\n    Welcome To You're Coupon System Administrator\\n</div>\\n<div>\\n  \\n \\n\\n</div>\"","module.exports = \"<div>\\n    Welcome To You're Coupon System Company\\n\\n</div>\\n\"","module.exports = \"<div>\\n    Welcome To You're Coupon System Customer\\n\\n</div>\\n<div>\\n\\n</div>\"","module.exports = \"<div>\\n    <p>Made by Yoav Calderon, all rights reserved &copy;</p>\\n\\n</div>\\n\"","module.exports = \"<div>\\n<nav *ngIf=\\\"navChooser=='ADMINISTRATOR'\\\">\\n    <a (click)= \\\"logout()\\\">Log Out</a>\\n    <a routerLink=\\\"add-company\\\"> Add A Company</a>\\n    <a routerLink=\\\"add-customer\\\"> Add A Customer</a>\\n    <a routerLink=\\\"get-all-companies\\\"> My Companies</a>\\n    <a routerLink=\\\"get-all-customers\\\"> My Customers</a>\\n    <!-- <a routerLink=\\\"get-one-company\\\"> Show A Company</a>\\n    <a routerLink=\\\"get-one-customer\\\"> Show A Customer</a> -->\\n\\n\\n</nav>\\n<nav *ngIf=\\\"navChooser=='COMPANY'\\\">\\n    <a (click)= \\\"logout()\\\">Log Out</a>\\n    <a routerLink=\\\"add-coupon\\\">Add coupon</a>\\n    <a routerLink=\\\"get-company-coupons\\\">My Company Coupons</a>\\n\\n\\n</nav>\\n<nav *ngIf=\\\"navChooser=='CUSTOMER'\\\">\\n        <a (click)= \\\"logout()\\\">Log Out</a>\\n        <a routerLink=\\\"get-customer-coupons\\\">My Coupons</a>\\n        <a routerLink=\\\"get-customer-details\\\">Show my info</a>\\n        <a routerLink=\\\"purchase-coupon\\\">Purchase Coupon</a>\\n    \\n\\n</nav>\\n<nav *ngIf=\\\"!navChooser\\\">\\n<a routerLink=\\\"login\\\">Please Log in</a>\\n    \\n\\n</nav>\\n\\n\\n\\n\\n\\n</div>\"","module.exports = \"<section>\\n    <header>\\n<app-header></app-header>  \\n      <link href=\\\"https://fonts.googleapis.com/css?family=Aguafina+Script|Aladin|Almendra|Almendra+SC|Amiri|Arbutus|Averia+Serif+Libre|Bilbo+Swash+Caps|Butcherman|Caesar+Dressing|Cantata+One|Ceviche+One|Charm|Chela+One|Condiment|Cookie|Creepster|Damion|Dr+Sugiyama|Eagle+Lake|Eater|Engagement|Ewert|Fredericka+the+Great|Frijole|Great+Vibes|Hanalei+Fill|IM+Fell+DW+Pica|IM+Fell+DW+Pica+SC|IM+Fell+English+SC|Inknut+Antiqua|Italianno|Kaushan+Script|Knewave|Luckiest+Guy|Marck+Script|MedievalSharp|Metal+Mania|Mirza|Modak|Monoton|Mr+Dafoe|New+Rocker|Niconne|Noto+Sans+TC|Oleo+Script|Oleo+Script+Swash+Caps|Pacifico|Pirata+One|Rakkas|Redressed|Romanesco|Rye|Sancreek|Seaweed+Script|Shojumaru|Shrikhand|Special+Elite|UnifrakturCook:700|UnifrakturMaguntia&display=swap\\\" rel=\\\"stylesheet\\\"> \\n    </header>\\n    <main><router-outlet></router-outlet></main>\\n    <footer><app-footer></app-footer></footer>\\n</section>\"","module.exports = \"<div>\\n    Welcome To Our Coupon System, Today is {{currentDate| date: 'EEE, MMM dd, yyyy'}}\\n        <h1></h1>\\n    <form>\\n            <div>\\n                 <br/><br/>\\n                </div>\\n        <input type=\\\"text\\\" name=\\\"email\\\" placeholder=\\\"email\\\" [(ngModel)]=\\\"emailVar\\\" required/><br />\\n        <input type=\\\"text\\\" name=\\\"password\\\" placeholder=\\\"password\\\" [(ngModel)]=\\\"passwordVar\\\" required/><br />\\n        <select name=\\\"type\\\" [(ngModel)]=\\\"typeVar\\\">\\n            <option value=\\\"ADMINISTRATOR\\\">Admin</option>\\n            <option value=\\\"CUSTOMER\\\">Customer</option>\\n            <option value=\\\"COMPANY\\\">Company</option>\\n        </select>\\n        <input type=\\\"button\\\" value=\\\"login\\\" (click)=\\\"login()\\\" />\\n    </form>\\n\\n    <br/><br/>\\n    <router-outlet></router-outlet>\\n</div>\"","module.exports = \"<p>main works!</p>\\n\"","module.exports = \"<div>\\n    <form>\\n        <input type=\\\"name\\\" name=\\\"compName\\\" placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"company.name\\\"/><br/>\\n        <input type=\\\"email\\\" name=\\\"compEmail\\\" placeholder=\\\"Company Email\\\" [(ngModel)]=\\\"company.email\\\"/><br/>\\n        <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"password\\\" [(ngModel)]=\\\"company.password\\\"/><br/>\\n        <input type=\\\"button\\\" value=\\\"Add Company\\\" (click)=\\\"createCompany()\\\" /><br/>\\n        \\n    </form>\\n</div>\"","module.exports = \"<div>\\n        <form>\\n            <input type=\\\"firstName\\\" name=\\\"custFirstName\\\" placeholder=\\\"Customer First Name\\\" [(ngModel)]=\\\"customer.firstName\\\"/><br/>\\n            <input type=\\\"lastName\\\" name=\\\"custLastName\\\" placeholder=\\\"Customer Last Name\\\" [(ngModel)]=\\\"customer.lastName\\\"/><br/>\\n            <input type=\\\"email\\\" name=\\\"custEmail\\\" placeholder=\\\"Customer email\\\" [(ngModel)]=\\\"customer.email\\\"/><br/>\\n            <input type=\\\"password\\\" name=\\\"custPass\\\" placeholder=\\\"Customer password\\\" [(ngModel)]=\\\"customer.password\\\"/><br/>\\n            <input type=\\\"button\\\" value=\\\"Add Customer\\\" (click)=\\\"createCustomer()\\\" /><br/>\\n            \\n        </form>\\n    </div>\"","module.exports = \"<div>\\n        <form>     \\n            <td>\\n            <input type=\\\"id\\\" name=\\\"Id\\\" placeholder=\\\"Company Id\\\" [(ngModel)]=\\\"company.id\\\"/><br/>\\n            <input type=\\\"button\\\" value=\\\"delete\\\" #id (click)=\\\"deleteCompany(company.id)\\\"/><br/>\\n        \\n                </td>\\n        </form>\\n    </div>\"","module.exports = \"<div>\\n        <form>     \\n            <td>\\n            <input type=\\\"id\\\" name=\\\"Id\\\" placeholder=\\\"Customer Id\\\" [(ngModel)]=\\\"customer.id\\\"/><br/>\\n            <input type=\\\"button\\\" value=\\\"delete\\\" #id (click)=\\\"deleteCustomer(customer.id)\\\"/><br/>\\n        \\n                </td>\\n        </form>\\n    </div>\"","module.exports = \"<div>\\n    <table *ngIf= \\\"companies\\\">\\n        <tr>\\n            <th>Name</th>\\n            <th>Email</th>\\n            <th></th>\\n        </tr>\\n        <tr *ngFor=\\\"let company of companies\\\">\\n            <td>{{company.name}}</td>\\n            <td>{{company.email}}</td>\\n            <td><input type=\\\"button\\\" value=\\\"delete\\\"  (click)=\\\"deleteCompany(company.id)\\\"/><br/></td>\\n            <td><input type=\\\"button\\\" value=\\\"update\\\" name=\\\"update\\\" (click)=\\\"editorEnabler(company)\\\"></td>\\n        </tr>\\n        <tr *ngIf = \\\"updater==true\\\">\\n            <td>\\n                    <form>\\n                            <input type=\\\"email\\\" name=\\\"companyEmail\\\"  [(ngModel)]=\\\"company.email\\\"/><br/>\\n                            <input type=\\\"password\\\" name=\\\"companyPassword\\\" placeholder=\\\"Company password\\\" [(ngModel)]=\\\"company.password\\\"/><br/>\\n                            <input type=\\\"button\\\" value=\\\"updateCompany\\\" (click)=\\\"updateCompany(company)\\\" /><br/>\\n                        </form>\\n            </td>\\n        </tr>\\n\\n    </table>\\n     \\n    </div>\"","module.exports = \"<div>\\n        <table *ngIf= \\\"customers\\\">\\n            <tr>\\n                <th>First Name</th><br/>\\n                <th>Last Name</th><br/>\\n                <th>Email</th><br/>\\n                <th></th>\\n            </tr>\\n            <tr *ngFor=\\\"let customer of customers\\\">\\n                <td>{{customer.firstName}}</td><br/>\\n                <td>{{customer.lastName}}</td><br/>\\n                <td>{{customer.email}}</td><br/>\\n                <td><input type=\\\"button\\\" value=\\\"delete\\\" name=\\\"delete\\\" (click)=\\\"deleteCustomer(customer)\\\"/><br/></td>\\n                <td><input type=\\\"button\\\" value=\\\"update\\\" name=\\\"update\\\" (click)=\\\"editorEnabler(customer)\\\"></td>\\n\\n            </tr>\\n            <tr *ngIf= \\\"updater == true\\\">\\n                <td>\\n                        <form>\\n                                <input type=\\\"text\\\" name=\\\"custFirstName\\\" placeholder=\\\"Customer First Name\\\" [(ngModel)]=\\\"customer.firstName\\\"/><br/>\\n                                <input type=\\\"text\\\" name=\\\"custLastName\\\" placeholder=\\\"Customer Last Name\\\" [(ngModel)]=\\\"customer.lastName\\\"/><br/>\\n                                <input type=\\\"email\\\" name=\\\"custEmail\\\" placeholder=\\\"Customer Email\\\" [(ngModel)]=\\\"customer.email\\\"/><br/>\\n                                <input type=\\\"password\\\" name=\\\"custPasswrod\\\" placeholder=\\\"Customer password\\\" [(ngModel)]=\\\"customer.password\\\"/><br/>\\n                                <input type=\\\"button\\\" value=\\\"Update Customer\\\" (click)=\\\"updateCustomer(customer)\\\" /><br/>\\n                                \\n                            </form>\\n                </td>\\n            </tr>\\n    \\n        </table>\\n    </div>\\n\"","module.exports = \"<div>\\n    <form>\\n        <input type=\\\"id\\\" name=\\\"companyId\\\" placeholder=\\\"Company Id\\\" [(ngModel)]=\\\"company.id\\\" /><br />\\n        <input type=\\\"button\\\" value=\\\"Get One Company\\\" (click)=\\\"getOneCompany()\\\" /><br />\\n\\n    </form>\\n</div>\"","module.exports = \"<div>\\n        <form>\\n            <input type=\\\"id\\\" name=\\\"customerId\\\" placeholder=\\\"Customer Id\\\" [(ngModel)]=\\\"customer.id\\\" /><br />\\n            <input type=\\\"button\\\" value=\\\"Get One Customer\\\" (click)=\\\"getOneCustomer()\\\" /><br />\\n    \\n        </form>\\n    </div>\"","module.exports = \"<div>\\n        <input type=\\\"number\\\" #id placeholder=\\\"Company Id\\\" name=\\\"compId\\\">\\n        <input type=\\\"button\\\" value=\\\"enter id\\\" (click)=\\\"loadComp(id.value)\\\" /><br/>\\n        <form>\\n            <input type=\\\"text\\\" name=\\\"companyName\\\"  [(ngModel)]=\\\"company.name\\\"/><br/>\\n            <input type=\\\"email\\\" name=\\\"companyEmail\\\"  [(ngModel)]=\\\"company.email\\\"/><br/>\\n            <input type=\\\"password\\\" name=\\\"companyPassword\\\" placeholder=\\\"Company password\\\" [(ngModel)]=\\\"company.password\\\"/><br/>\\n            <input type=\\\"button\\\" value=\\\"Update Company\\\" (click)=\\\"updateCompany(company)\\\" /><br/>\\n        </form>\\n    </div>\"","module.exports = \"<div>\\n        <form>\\n            <input type=\\\"number\\\" placeholder=\\\"Customer Id\\\" name=\\\"custId\\\"[(ngModel)]= customer.id>\\n            <input type=\\\"text\\\" name=\\\"custFirstName\\\" placeholder=\\\"Customer First Name\\\" [(ngModel)]=\\\"customer.firstName\\\"/><br/>\\n            <input type=\\\"text\\\" name=\\\"custLastName\\\" placeholder=\\\"Customer Last Name\\\" [(ngModel)]=\\\"customer.lastName\\\"/><br/>\\n            <input type=\\\"email\\\" name=\\\"custEmail\\\" placeholder=\\\"Customer Email\\\" [(ngModel)]=\\\"customer.email\\\"/><br/>\\n            <input type=\\\"password\\\" name=\\\"custPasswrod\\\" placeholder=\\\"Customer password\\\" [(ngModel)]=\\\"customer.password\\\"/><br/>\\n            <input type=\\\"button\\\" value=\\\"Update Customer\\\" (click)=\\\"updateCustomer(customer)\\\" /><br/>\\n            \\n        </form>\\n    </div>\"","module.exports = \"<div>\\n        <form>\\n            Coupon Description: <br/> <input type=\\\"description\\\" name=\\\"coupDescription\\\" placeholder=\\\"Coupon Description\\\" [(ngModel)]=\\\"coupon.description\\\"/><br/>\\n            Coupon Category:<br/> <select name=\\\"type\\\" [(ngModel)]=\\\"coupon.category\\\">\\n                <option value=\\\"ELECTRICITY\\\">Electricity</option>\\n                <option value=\\\"RESTURANT\\\">Resturant</option>\\n                <option value=\\\"VACATION\\\">Vacation</option>\\n                <option value=\\\"FOOD\\\">Food</option>\\n                <option value=\\\"HOME\\\">Home</option>\\n                <option value=\\\"CAMPING\\\">Camping</option>\\n                <option value=\\\"MEDICAL\\\">Medical</option>\\n            </select>\\n            <br/>\\n            \\n            \\n         \\n            Coupon Title:    <br/><input type=\\\"title\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"coupon.title\\\"/><br/>\\n            Coupon Price:    <br/><input type=\\\"number\\\" name=\\\"price\\\" placeholder=\\\"coupon price\\\" [(ngModel)]=\\\"coupon.price\\\"/><br/>\\n            Coupon image:   <br/> <input type=\\\"string\\\" name=\\\"image\\\" placeholder=\\\"coupon image\\\" [(ngModel)]=\\\"coupon.image\\\"/><br/>\\n            Coupon amount:   <br/> <input type=\\\"number\\\" name=\\\"amount\\\" placeholder=\\\"coupon amount\\\" [(ngModel)]=\\\"coupon.amount\\\"/><br/>\\n            Start Date:      <br/><input type=\\\"date\\\" name=\\\"startDate\\\"  [(ngModel)]=\\\"coupon.startDate\\\" /><br/>\\n            End Date:        <br/><input type=\\\"date\\\" name=\\\"endDate\\\"  [(ngModel)]=\\\"coupon.endDate\\\" /><br/>\\n            <input type=\\\"button\\\" value=\\\"Add Coupon\\\" (click)=\\\"createCoupon()\\\" /><br/>\\n            \\n        </form>\\n    </div>\\n\"","module.exports = \"<div>\\n        <form>     \\n            <td>\\n            <input type=\\\"id\\\" name=\\\"Id\\\" placeholder=\\\"Coupon Id\\\" [(ngModel)]=\\\"coupon.id\\\"/><br/>\\n            <input type=\\\"button\\\" value=\\\"delete\\\" #id (click)=\\\"deleteCoupon(coupon.id)\\\"/><br/>\\n        \\n                </td>\\n        </form>\\n    </div>\\n    \"","module.exports = \"<div>\\n        <table *ngIf= \\\"companies\\\">\\n            <tr>\\n                <th>title</th>\\n                <th>category</th>\\n                <th>description</th>\\n                <th>startDate</th>\\n                <th>endDate</th>\\n                <th>amount</th>\\n                <th>price</th>\\n                <th>image</th>\\n            </tr>\\n            <tr *ngFor=\\\"let coupon of coupons\\\">\\n                <td>{{coupon.title}}</td>\\n                <td>{{coupon.category}}</td>\\n                <td>{{coupon.description}}</td>\\n                <td>{{coupon.startDate}}</td>\\n                <td>{{coupon.endDate}}</td>\\n                <td>{{coupon.amount}}</td>\\n                <td>{{coupon.price}}</td>\\n                <td>{{coupon.image}}</td>\\n         <td>\\n                <input type=\\\"button\\\" value=\\\"delete\\\" #id (click)=\\\"deleteCoupon(coupon.id)\\\"/><br/>\\n         </td>\\n    \\n            </tr>\\n    \\n        </table>\\n         \\n        </div>\"","module.exports = \"<div>\\n        <table *ngIf= \\\"companies\\\">\\n            <tr>\\n                <th>title</th>\\n                <th>category</th>\\n                <th>description</th>\\n                <th>startDate</th>\\n                <th>endDate</th>\\n                <th>amount</th>\\n                <th>price</th>\\n                <th>image</th>\\n            </tr>\\n            <tr *ngFor=\\\"let coupon of coupons\\\">\\n                <td>{{coupon.title}}</td>\\n                <td>{{coupon.category}}</td>\\n                <td>{{coupon.description}}</td>\\n                <td>{{coupon.startDate}}</td>\\n                <td>{{coupon.endDate}}</td>\\n                <td>{{coupon.amount}}</td>\\n                <td>{{coupon.price}}</td>\\n                <td>{{coupon.image}}</td>\\n         <td>\\n                <input type=\\\"button\\\" value=\\\"delete\\\" #id (click)=\\\"deleteCoupon(coupon.id)\\\"/><br/>\\n         </td>\\n    \\n            </tr>\\n    \\n        </table>\\n         \\n        </div>\"","module.exports = \"<div>\\n\\n    <table *ngIf=\\\"coupons\\\">\\n        <tr class=\\\"form-group\\\">\\n           <br/> Min-Price: <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"search by price\\\"\\n                [(ngModel)]=\\\"searchPrice\\\" />\\n        <tr class=\\\"form-group\\\">\\n            Category filter: <select type=\\\"category\\\" class=\\\"form-control\\\" placeholder=\\\"search by category\\\"\\n                [(ngModel)]=\\\"searchTerm\\\">\\n                <option value=\\\"ELECTRICITY\\\">Electricity</option>\\n                <option value=\\\"RESTURANT\\\">Resturant</option>\\n                <option value=\\\"VACATION\\\">Vacation</option>\\n                <option value=\\\"FOOD\\\">Food</option>\\n                <option value=\\\"HOME\\\">Home</option>\\n                <option value=\\\"CAMPING\\\">Camping</option>\\n                <option value=\\\"MEDICAL\\\">Medical</option>\\n            </select>\\n        </tr>\\n        <tr>\\n            <th>Title</th>\\n            <th>Category</th>\\n            <th>Description</th>\\n            <th>Start date</th>\\n            <th>End date</th>\\n            <th>Amount</th>\\n            <th>Price</th>\\n            <th>Image</th>\\n            <th></th>\\n        </tr>\\n\\n\\n        <tr *ngFor=\\\"let coupon of coupons| priceFilter:searchPrice| categoryFilter:searchTerm\\\">\\n            <td>{{coupon.title}}</td>\\n            <td>{{coupon.category}}</td>\\n            <td>{{coupon.description}}</td>\\n            <td>{{coupon.startDate}}</td>\\n            <td>{{coupon.endDate}}</td>\\n            <td>{{coupon.amount}}</td>\\n            <td>{{coupon.price}}</td>\\n            <td>{{coupon.image}}</td>\\n            <td><input type=\\\"button\\\" value=\\\"delete\\\" (click)=\\\"deleteCoupon(coupon.id)\\\" /><br /></td>\\n            <td><input type=\\\"button\\\" value=\\\"update\\\" name=\\\"update\\\" (click)=\\\"editorEnabler(coupon)\\\"></td>\\n        </tr>\\n        <tr *ngIf=\\\"updater==true\\\">\\n            <td>\\n                <form>\\n                    <input type=\\\"description\\\" name=\\\"coupDescription\\\" placeholder=\\\"Description\\\"\\n                        [(ngModel)]=\\\"coupon.description\\\" /><br />\\n                    <select name=\\\"category\\\" [(ngModel)]=\\\"coupon.category\\\">\\n                        <option value=\\\"ELECTRICITY\\\">Electricity</option>\\n                        <option value=\\\"RESTURANT\\\">Resturant</option>\\n                        <option value=\\\"VACATION\\\">Vacation</option>\\n                        <option value=\\\"FOOD\\\">Food</option>\\n                        <option value=\\\"HOME\\\">Home</option>\\n                        <option value=\\\"CAMPING\\\">Camping</option>\\n                        <option value=\\\"MEDICAL\\\">Medical</option>\\n                    </select>\\n                    <input type=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"description\\\"\\n                        [(ngModel)]=\\\"coupon.description\\\" /><br />\\n                    <input type=\\\"title\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"coupon.title\\\" /><br />\\n                    <input type=\\\"date\\\" name=\\\"startDate\\\" placeholder=\\\"startDate\\\" [(ngModel)]=\\\"coupon.startDate\\\" /><br />\\n                    <input type=\\\"date\\\" name=\\\"endDate\\\" placeholder=\\\"endDate\\\" [(ngModel)]=\\\"coupon.endDate\\\" /><br />\\n                    <input type=\\\"number\\\" name=\\\"price\\\" placeholder=\\\"price\\\" [(ngModel)]=\\\"coupon.price\\\" /><br />\\n                    <input type=\\\"string\\\" name=\\\"image\\\" placeholder=\\\"image\\\" [(ngModel)]=\\\"coupon.image\\\" /><br />\\n                    <input type=\\\"button\\\" value=\\\"Update Coupon\\\" (click)=\\\"updateCoupon(coupon)\\\" /><br />\\n\\n                </form>\\n            </td>\\n        </tr>\\n\\n    </table>\\n\\n</div>\"","module.exports = \"<div>\\n        <form>\\n            <input type=\\\"description\\\" name=\\\"coupDescription\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"coupon.description\\\"/><br/>\\n            <input type=\\\"category\\\" name=\\\"category\\\" placeholder=\\\"Category\\\" [(ngModel)]=\\\"coupon.category\\\"/><br/>\\n            <input type=\\\"title\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"coupon.title\\\"/><br/>\\n            <input type=\\\"date\\\" value=\\\"startDate\\\" (click)=\\\"coupon.startDate()\\\" /><br/>\\n            <input type=\\\"date\\\" name=\\\"endDate\\\" (click)=\\\"coupon.endDate()\\\" /><br/>\\n            <input type=\\\"number\\\" name=\\\"price\\\" (click)=\\\"coupon.price()\\\" /><br/>\\n            <input type=\\\"string\\\" name=\\\"image\\\" (click)=\\\"coupon.image()\\\" /><br/>\\n            \\n        </form>\\n    </div>\"","module.exports = \"<div>\\r\\n    <table *ngIf=\\\"coupons\\\">\\r\\n            <tr class=\\\"form-group\\\">\\r\\n               <br/> Min-Price: <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"search by price\\\"\\r\\n                    [(ngModel)]=\\\"searchPrice\\\" />\\r\\n            <tr class=\\\"form-group\\\">\\r\\n                Category filter: <select type=\\\"category\\\" class=\\\"form-control\\\" placeholder=\\\"search by category\\\"\\r\\n                    [(ngModel)]=\\\"searchTerm\\\">\\r\\n                    <option value=\\\"ELECTRICITY\\\">Electricity</option>\\r\\n                    <option value=\\\"RESTURANT\\\">Resturant</option>\\r\\n                    <option value=\\\"VACATION\\\">Vacation</option>\\r\\n                    <option value=\\\"FOOD\\\">Food</option>\\r\\n                    <option value=\\\"HOME\\\">Home</option>\\r\\n                    <option value=\\\"CAMPING\\\">Camping</option>\\r\\n                    <option value=\\\"MEDICAL\\\">Medical</option>\\r\\n                </select>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <th>Title</th>\\r\\n                <th>Category</th>\\r\\n                <th>Description</th>\\r\\n                <th>Start date</th>\\r\\n                <th>End date</th>\\r\\n                <th>Amount</th>\\r\\n                <th>Price</th>\\r\\n                <th>Image</th>\\r\\n                <th></th>\\r\\n            </tr>\\r\\n    \\r\\n    \\r\\n            <tr *ngFor=\\\"let coupon of coupons| priceFilter:searchPrice| categoryFilter:searchTerm\\\">\\r\\n                <td>{{coupon.title}}</td>\\r\\n                <td>{{coupon.category}}</td>\\r\\n                <td>{{coupon.description}}</td>\\r\\n                <td>{{coupon.startDate}}</td>\\r\\n                <td>{{coupon.endDate}}</td>\\r\\n                <td>{{coupon.amount}}</td>\\r\\n                <td>{{coupon.price}}</td>\\r\\n                <td>{{coupon.image}}</td>\\r\\n                <td><input type=\\\"button\\\" value=\\\"delete\\\" (click)=\\\"deleteCoupon(coupon.id)\\\" /><br /></td>\\r\\n                <td><input type=\\\"button\\\" value=\\\"update\\\" name=\\\"update\\\" (click)=\\\"editorEnabler(coupon)\\\"></td>\\r\\n            </tr>\\r\\n\\r\\n    </table>\\r\\n     \\r\\n    </div>\"","module.exports = \"<div>\\n        <table *ngIf= \\\"customers\\\">\\n            <tr>\\n                <th>title</th>\\n                <th>category</th>\\n                <th>description</th>\\n                <th>startDate</th>\\n                <th>endDate</th>\\n                <th>amount</th>\\n                <th>price</th>\\n                <th>image</th>\\n            </tr>\\n            <tr *ngFor=\\\"let customer of customers\\\">\\n                <td>{{coupon.title}}</td>\\n                <td>{{coupon.category}}</td>\\n                <td>{{coupon.description}}</td>\\n                <td>{{coupon.startDate}}</td>\\n                <td>{{coupon.endDate}}</td>\\n                <td>{{coupon.amount}}</td>\\n                <td>{{coupon.price}}</td>\\n                <td>{{coupon.image}}</td>\\n\\n    \\n            </tr>\\n    \\n        </table>\\n         \\n        </div>\"","module.exports = \"<div>\\n        <table *ngIf= \\\"customers\\\">\\n            <tr>\\n                <th>title</th>\\n                <th>category</th>\\n                <th>description</th>\\n                <th>startDate</th>\\n                <th>endDate</th>\\n                <th>amount</th>\\n                <th>price</th>\\n                <th>image</th>\\n            </tr>\\n            <tr *ngFor=\\\"let customer of customers\\\">\\n                <td>{{coupon.title}}</td>\\n                <td>{{coupon.category}}</td>\\n                <td>{{coupon.description}}</td>\\n                <td>{{coupon.startDate}}</td>\\n                <td>{{coupon.endDate}}</td>\\n                <td>{{coupon.amount}}</td>\\n                <td>{{coupon.price}}</td>\\n                <td>{{coupon.image}}</td>\\n\\n    \\n            </tr>\\n    \\n        </table>\\n         \\n        </div>\"","module.exports = \"<div>\\n        <table *ngIf=\\\"coupons\\\">\\n                <tr class=\\\"form-group\\\">\\n                   <br/> Min-Price: <input type=\\\"number\\\" placeholder=\\\"search by price\\\"\\n                        [(ngModel)]=\\\"searchPrice\\\" />\\n                <tr class=\\\"form-group\\\">\\n                    Category filter: <select type=\\\"category\\\" placeholder=\\\"search by category\\\"\\n                        [(ngModel)]=\\\"searchTerm\\\">\\n                        <option value=\\\"ELECTRICITY\\\">Electricity</option>\\n                        <option value=\\\"RESTURANT\\\">Resturant</option>\\n                        <option value=\\\"VACATION\\\">Vacation</option>\\n                        <option value=\\\"FOOD\\\">Food</option>\\n                        <option value=\\\"HOME\\\">Home</option>\\n                        <option value=\\\"CAMPING\\\">Camping</option>\\n                        <option value=\\\"MEDICAL\\\">Medical</option>\\n                    </select>\\n                </tr>\\n                <tr>\\n                    <th>Title</th>\\n                    <th>Category</th>\\n                    <th>Description</th>\\n                    <th>Start date</th>\\n                    <th>End date</th>\\n                    <th>Amount</th>\\n                    <th>Price</th>\\n                    <th>Image</th>\\n                    <th></th>\\n                </tr>\\n        \\n        \\n                <tr *ngFor=\\\"let coupon of coupons| priceFilter:searchPrice| categoryFilter:searchTerm\\\">\\n                    <td>{{coupon.title}}</td>\\n                    <td>{{coupon.category}}</td>\\n                    <td>{{coupon.description}}</td>\\n                    <td>{{coupon.startDate}}</td>\\n                    <td>{{coupon.endDate}}</td>\\n                    <td>{{coupon.amount}}</td>\\n                    <td>{{coupon.price}}</td>\\n                    <td>{{coupon.image}}</td>\\n                </tr>\\n    \\n        </table>\\n         \\n        </div>\"","module.exports = \"<div >\\n        <tr *ngIf=\\\"customer\\\">\\n              <br/><br/>  <td >{{customer.email}}</td>  <br/> \\n              <br/><br/>  <td>{{customer.firstName}}</td>  <br/><br/>  \\n              <br/><br/>  <td>{{customer.lastName}}</td>  <br/><br/>  \\n              <br/><br/>  <td>{{customer.password}}</td>  <br/><br/>  \\n              <br/><br/>  <td>{{customer.id}}</td>  <br/><br/>  \\n      \\n            </tr>\\n            </div>\"","module.exports = \"<div>\\n\\n    <table *ngIf=\\\"coupons\\\">\\n        <tr class=\\\"form-group\\\">\\n            <br /> Min-Price: <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"search by price\\\"\\n                [(ngModel)]=\\\"searchPrice\\\" />\\n        <tr class=\\\"form-group\\\">\\n            Category filter: <select type=\\\"category\\\" class=\\\"form-control\\\" placeholder=\\\"search by category\\\"\\n                [(ngModel)]=\\\"searchTerm\\\">\\n                <option value=\\\"ELECTRICITY\\\">Electricity</option>\\n                <option value=\\\"RESTURANT\\\">Resturant</option>\\n                <option value=\\\"VACATION\\\">Vacation</option>\\n                <option value=\\\"FOOD\\\">Food</option>\\n                <option value=\\\"HOME\\\">Home</option>\\n                <option value=\\\"CAMPING\\\">Camping</option>\\n                <option value=\\\"MEDICAL\\\">Medical</option>\\n            </select>\\n        </tr>\\n        <tr>\\n            <th>Title</th>\\n            <th>Category</th>\\n            <th>Description</th>\\n            <th>Start date</th>\\n            <th>End date</th>\\n            <th>Amount</th>\\n            <th>Price</th>\\n            <th>Image</th>\\n            <th></th>\\n        </tr>\\n\\n\\n        <tr *ngFor=\\\"let coupon of coupons| priceFilter:searchPrice| categoryFilter:searchTerm\\\">\\n            <td>{{coupon.title}}</td>\\n            <td>{{coupon.category}}</td>\\n            <td>{{coupon.description}}</td>\\n            <td>{{coupon.startDate}}</td>\\n            <td>{{coupon.endDate}}</td>\\n            <td>{{coupon.amount}}</td>\\n            <td>{{coupon.price}}</td>\\n            <td>{{coupon.image}}</td>\\n            <td><input type=\\\"button\\\" value=\\\"purchaseCoupon\\\" (click)=\\\"purchaseCoupon(coupon)\\\" /><br /></td>\\n        </tr>\\n\\n    </table>\\n\\n</div>\"","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { CompanyComponent } from './components/company/company.component';\nimport { GetAllCompaniesComponent } from './components/methods/adminMethods/get-all-companies/get-all-companies.component';\nimport { GetAllCustomersComponent } from './components/methods/adminMethods/get-all-customers/get-all-customers.component';\nimport { AddCompanyComponent } from './components/methods/adminMethods/add-company/add-company.component';\nimport { AddCustomerComponent } from './components/methods/adminMethods/add-customer/add-customer.component';\nimport { DeleteCompanyComponent } from './components/methods/adminMethods/delete-company/delete-company.component';\nimport { DeleteCustomerComponent } from './components/methods/adminMethods/delete-customer/delete-customer.component';\nimport { GetOneCompanyComponent } from './components/methods/adminMethods/get-one-company/get-one-company.component';\nimport { UpdateCompanyComponent } from './components/methods/adminMethods/update-company/update-company.component';\nimport { UpdateCustomerComponent } from './components/methods/adminMethods/update-customer/update-customer.component';\nimport { GetOneCustomerComponent } from './components/methods/adminMethods/get-one-customer/get-one-customer.component';\nimport { AddCouponComponent } from './components/methods/companyMethods/add-coupon/add-coupon.component';\nimport { DeleteCouponComponent } from './components/methods/companyMethods/delete-coupon/delete-coupon.component';\nimport { GetCompanyCouponsComponent } from './components/methods/companyMethods/get-company-coupons/get-company-coupons.component';\nimport { GetCompanyCouponsCategoryComponent } from './components/methods/companyMethods/get-company-coupons-category/get-company-coupons-category.component';\nimport { GetCompanyCouponsPriceComponent } from './components/methods/companyMethods/get-company-coupons-price/get-company-coupons-price.component';\nimport { UpdateCouponComponent } from './components/methods/companyMethods/update-coupon/update-coupon.component';\nimport { GetCustomerCouponsComponent } from './components/methods/customerMethods/get-customer-coupons/get-customer-coupons.component';\nimport { GetCustomerCouponsCategoryComponent } from './components/methods/customerMethods/get-customer-coupons-category/get-customer-coupons-category.component';\nimport { GetCustomerCouponsPriceComponent } from './components/methods/customerMethods/get-customer-coupons-price/get-customer-coupons-price.component';\nimport { GetCustomerDetailsComponent } from './components/methods/customerMethods/get-customer-details/get-customer-details.component';\nimport { PurchaseCouponComponent } from './components/methods/customerMethods/purchase-coupon/purchase-coupon.component';\nimport { GetAllCouponsComponent } from './components/methods/customerMethods/get-all-coupons/get-all-coupons.component';\n\n\nconst routes: Routes = [\n  {path: 'admin', component: AdminComponent},\n  {path: 'company', component: CompanyComponent},\n  {path: 'customer', component: CustomerComponent},\n  {path: 'login',component: LoginComponent},\n  {path: 'add-company', component: AddCompanyComponent},\n  {path: 'add-customer', component: AddCustomerComponent},\n  {path: 'delete-company', component: DeleteCompanyComponent},\n  {path: 'delete-customer', component: DeleteCustomerComponent},\n  {path: 'get-one-customer', component: GetOneCustomerComponent},\n  {path: 'get-one-company', component: GetOneCompanyComponent},\n  {path: 'update-company', component: UpdateCompanyComponent},\n  {path: 'update-customer', component: UpdateCustomerComponent},\n  {path: 'get-all-companies', component:GetAllCompaniesComponent},\n  {path: 'get-all-customers', component:GetAllCustomersComponent},\n  {path: 'add-coupon', component:AddCouponComponent},\n  {path: 'delete-coupon', component:DeleteCouponComponent},\n  {path: 'get-company-coupons', component:GetCompanyCouponsComponent},\n  {path: 'get-company-coupons-price', component:GetCompanyCouponsPriceComponent},\n  {path: 'get-company-coupons-category', component:GetCompanyCouponsCategoryComponent},\n  {path: 'update-coupon', component:UpdateCouponComponent},\n  {path: 'get-customer-coupons', component:GetCustomerCouponsComponent},\n  {path: 'get-customer-coupons-category', component:GetCustomerCouponsCategoryComponent}, \n  {path: 'get-customer-coupons-price', component:GetCustomerCouponsPriceComponent}, \n  {path: 'get-customer-details', component:GetCustomerDetailsComponent},\n  {path: 'purchase-coupon', component:PurchaseCouponComponent},\n  {path: 'get-all-coupons', component:GetAllCouponsComponent},\n\n  {path: \"\", redirectTo: \"login\", pathMatch: \"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { MainComponent } from './components/main/main.component';\nimport {FormsModule} from '@angular/forms';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { LoginComponent } from './components/login/login.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { CompanyComponent } from './components/company/company.component';\nimport { AddCompanyComponent } from './components/methods/adminMethods/add-company/add-company.component';\nimport { AddCustomerComponent } from './components/methods/adminMethods/add-customer/add-customer.component';\nimport { DeleteCustomerComponent } from './components/methods/adminMethods/delete-customer/delete-customer.component';\nimport { DeleteCompanyComponent } from './components/methods/adminMethods/delete-company/delete-company.component';\nimport { GetAllCompaniesComponent } from './components/methods/adminMethods/get-all-companies/get-all-companies.component';\nimport { GetAllCustomersComponent } from './components/methods/adminMethods/get-all-customers/get-all-customers.component';\nimport { GetOneCompanyComponent } from './components/methods/adminMethods/get-one-company/get-one-company.component';\nimport { GetOneCustomerComponent } from './components/methods/adminMethods/get-one-customer/get-one-customer.component';\nimport { UpdateCompanyComponent } from './components/methods/adminMethods/update-company/update-company.component';\nimport { UpdateCustomerComponent } from './components/methods/adminMethods/update-customer/update-customer.component';\nimport { GetCompanyCouponsComponent } from './components/methods/companyMethods/get-company-coupons/get-company-coupons.component';\nimport { AddCouponComponent } from './components/methods/companyMethods/add-coupon/add-coupon.component';\nimport { DeleteCouponComponent } from './components/methods/companyMethods/delete-coupon/delete-coupon.component';\nimport { GetCompanyCouponsCategoryComponent } from './components/methods/companyMethods/get-company-coupons-category/get-company-coupons-category.component';\nimport { GetCompanyCouponsPriceComponent } from './components/methods/companyMethods/get-company-coupons-price/get-company-coupons-price.component';\nimport { UpdateCouponComponent } from './components/methods/companyMethods/update-coupon/update-coupon.component';\nimport { GetCustomerCouponsComponent } from './components/methods/customerMethods/get-customer-coupons/get-customer-coupons.component';\nimport { GetCustomerCouponsCategoryComponent } from './components/methods/customerMethods/get-customer-coupons-category/get-customer-coupons-category.component';\nimport { GetCustomerCouponsPriceComponent } from './components/methods/customerMethods/get-customer-coupons-price/get-customer-coupons-price.component';\nimport { GetCustomerDetailsComponent } from './components/methods/customerMethods/get-customer-details/get-customer-details.component';\nimport { PurchaseCouponComponent } from './components/methods/customerMethods/purchase-coupon/purchase-coupon.component';\nimport { categoryFilterPipe } from './components/methods/category-filter.pipe';\nimport { priceFilterPipe } from './components/methods/price-filter.pipe';\nimport { GetAllCouponsComponent } from './components/methods/customerMethods/get-all-coupons/get-all-coupons.component';\n\n@NgModule({\n  declarations: [\n    \n    LayoutComponent,\n    \n    HeaderComponent,\n    \n    \n    MainComponent,\n    \n    FooterComponent,\n    \n    LoginComponent,\n    \n    AdminComponent,\n    \n    CustomerComponent,\n    \n    CompanyComponent,\n    \n    AddCompanyComponent,\n    \n    AddCustomerComponent,\n    \n    DeleteCustomerComponent,\n    \n    DeleteCompanyComponent,\n    \n    GetAllCompaniesComponent,\n    \n    GetAllCustomersComponent,\n    \n    GetOneCompanyComponent,\n    \n    GetOneCustomerComponent,\n    \n    UpdateCompanyComponent,\n    \n    UpdateCustomerComponent,\n    \n    GetCompanyCouponsComponent,\n    \n    AddCouponComponent,\n    \n    DeleteCouponComponent,\n    \n    GetCompanyCouponsCategoryComponent,\n    \n    GetCompanyCouponsPriceComponent,\n    \n    UpdateCouponComponent,\n    \n    GetCustomerCouponsComponent,\n    \n    GetCustomerCouponsCategoryComponent,\n    \n    GetCustomerCouponsPriceComponent,\n    \n    GetCustomerDetailsComponent,\n    \n    PurchaseCouponComponent,\n    \n    \n    categoryFilterPipe,\n    \n    priceFilterPipe,\n    \n    GetAllCouponsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [LayoutComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tcGFueS9jb21wYW55LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3VzdG9tZXIvY3VzdG9tZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"div{\\r\\n    height: 100%;\\r\\n}\\r\\np{\\r\\n    margin: 0;\\r\\n    color:midnightblue;\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxTQUFTO0lBQ1Qsa0JBQWtCOztBQUV0QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2e1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbnB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBjb2xvcjptaWRuaWdodGJsdWU7XHJcblxyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"a{\\r\\n    font-size: 5vh;\\r\\n    color: black;\\r\\n    margin: 0 10px;\\r\\n    text-decoration: none;\\r\\n    display: inline-block;\\r\\n    -webkit-transform: translateY(50%);\\r\\n            transform: translateY(50%);\\r\\n}\\r\\na:hover{\\r\\n    color:midnightblue;\\r\\n    -webkit-animation: fade 8s;\\r\\n            animation: fade 8s;\\r\\n}\\r\\ndiv{\\r\\n    border: 3px black;\\r\\n}\\r\\n@-webkit-keyframes fade{\\r\\n\\r\\n    from {opacity:0.6;}\\r\\n    to {opacity:1;}\\r\\n}\\r\\n@keyframes fade{\\r\\n\\r\\n    from {opacity:0.6;}\\r\\n    to {opacity:1;}\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsWUFBWTtJQUNaLGNBQWM7SUFDZCxxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLGtDQUEwQjtZQUExQiwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQiwwQkFBa0I7WUFBbEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxpQkFBaUI7QUFDckI7QUFJQTs7SUFFSSxNQUFNLFdBQVcsQ0FBQztJQUNsQixJQUFJLFNBQVMsQ0FBQztBQUNsQjtBQUpBOztJQUVJLE1BQU0sV0FBVyxDQUFDO0lBQ2xCLElBQUksU0FBUyxDQUFDO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhe1xyXG4gICAgZm9udC1zaXplOiA1dmg7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBtYXJnaW46IDAgMTBweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg1MCUpO1xyXG59XHJcbmE6aG92ZXJ7XHJcbiAgICBjb2xvcjptaWRuaWdodGJsdWU7XHJcbiAgICBhbmltYXRpb246IGZhZGUgOHM7XHJcbn1cclxuZGl2e1xyXG4gICAgYm9yZGVyOiAzcHggYmxhY2s7XHJcbn1cclxuXHJcblxyXG5cclxuQGtleWZyYW1lcyBmYWRle1xyXG5cclxuICAgIGZyb20ge29wYWNpdHk6MC42O31cclxuICAgIHRvIHtvcGFjaXR5OjE7fVxyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Company } from 'src/app/models/Company';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\ncompanies: Company[];\n\n  constructor(private service: AdminService, private router:Router) { }\n  public navChooser: string;\nngDoCheck(){\n  this.navChooser=sessionStorage.typeVar;\n}\nngOnInit() {\n  this.navChooser=sessionStorage.typeVar;\n}\n\n\nlogout(){\n  sessionStorage.token=null;\n  sessionStorage.typeVar=null;\n  this.router.navigate(['login']);\n\n}\n}\n","module.exports = \"section{\\r\\n    height: 100vh;\\r\\n    background-color: rgb(218, 218, 218);\\r\\n    text-align: center;\\r\\n    box-sizing: border-box;\\r\\n    display: grid;\\r\\n    grid-template-rows: 23% 70% 7%;\\r\\n    grid-auto-columns: repeat(12, 1fr)\\r\\n}\\r\\nheader{\\r\\n    grid-column: span 12;\\r\\n    border: 2px solid black;\\r\\n    font-family: 'UnifrakturCook', cursive;\\r\\n}\\r\\nmain{\\r\\n    grid-column: span 12;\\r\\n    border: 2px solid black;\\r\\n    font-family: 'Pirata One', cursive;\\r\\n    \\r\\n    \\r\\n}\\r\\nfooter{\\r\\n    grid-column: span 12;\\r\\n    border: 2px solid black;\\r\\n    font-family: 'UnifrakturMaguntia', cursive;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvbGF5b3V0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isb0NBQW9DO0lBQ3BDLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLDhCQUE4QjtJQUM5QjtBQUNKO0FBQ0E7SUFDSSxvQkFBb0I7SUFDcEIsdUJBQXVCO0lBQ3ZCLHNDQUFzQztBQUMxQztBQUlBO0lBQ0ksb0JBQW9CO0lBQ3BCLHVCQUF1QjtJQUN2QixrQ0FBa0M7OztBQUd0QztBQUNBO0lBQ0ksb0JBQW9CO0lBQ3BCLHVCQUF1QjtJQUN2QiwwQ0FBMEM7O0FBRTlDIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvbGF5b3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzZWN0aW9ue1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTgsIDIxOCwgMjE4KTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAyMyUgNzAlIDclO1xyXG4gICAgZ3JpZC1hdXRvLWNvbHVtbnM6IHJlcGVhdCgxMiwgMWZyKVxyXG59XHJcbmhlYWRlcntcclxuICAgIGdyaWQtY29sdW1uOiBzcGFuIDEyO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XHJcbiAgICBmb250LWZhbWlseTogJ1VuaWZyYWt0dXJDb29rJywgY3Vyc2l2ZTtcclxufVxyXG5cclxuICAgIFxyXG5cclxubWFpbntcclxuICAgIGdyaWQtY29sdW1uOiBzcGFuIDEyO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XHJcbiAgICBmb250LWZhbWlseTogJ1BpcmF0YSBPbmUnLCBjdXJzaXZlO1xyXG4gICAgXHJcbiAgICBcclxufVxyXG5mb290ZXJ7XHJcbiAgICBncmlkLWNvbHVtbjogc3BhbiAxMjtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG4gICAgZm9udC1mYW1pbHk6ICdVbmlmcmFrdHVyTWFndW50aWEnLCBjdXJzaXZlO1xyXG5cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"a{\\r\\n    font-size: x-large;\\r\\n    color: black;\\r\\n    margin: 10px;\\r\\n    display: block;\\r\\n}\\r\\na:hover{\\r\\n    color: midnightblue;\\r\\n    -webkit-animation: fade 1s;\\r\\n            animation: fade 1s;\\r\\n}\\r\\n@-webkit-keyframes fade{\\r\\n    from {opacity:0.8;}\\r\\n    to {opacity:1;}\\r\\n}\\r\\n@keyframes fade{\\r\\n    from {opacity:0.8;}\\r\\n    to {opacity:1;}\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixZQUFZO0lBQ1osY0FBYztBQUNsQjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLDBCQUFrQjtZQUFsQixrQkFBa0I7QUFDdEI7QUFHQTtJQUNJLE1BQU0sV0FBVyxDQUFDO0lBQ2xCLElBQUksU0FBUyxDQUFDO0FBQ2xCO0FBSEE7SUFDSSxNQUFNLFdBQVcsQ0FBQztJQUNsQixJQUFJLFNBQVMsQ0FBQztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImF7XHJcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5hOmhvdmVye1xyXG4gICAgY29sb3I6IG1pZG5pZ2h0Ymx1ZTtcclxuICAgIGFuaW1hdGlvbjogZmFkZSAxcztcclxufVxyXG5cclxuXHJcbkBrZXlmcmFtZXMgZmFkZXtcclxuICAgIGZyb20ge29wYWNpdHk6MC44O31cclxuICAgIHRvIHtvcGFjaXR5OjE7fVxyXG59Il19 */\"","import { Component, OnInit,EventEmitter, Output } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent  {\n  public currentDate: Date;\n  emailVar: string;\n  passwordVar: string;\n  typeVar: string;\n\n  @Output()\n  public transferName : EventEmitter<String>;\n\n  constructor(private loginService: LoginService, private router: Router) {}\n  public login(): void {\n    this.loginService.login(this.emailVar, this.passwordVar, this.typeVar).subscribe(response => {\n      if(response.token){\n      sessionStorage.token = response.token;\n      sessionStorage.typeVar = this.typeVar;\n      this.routeToUser(sessionStorage.typeVar);\n\n   \n    }\n    });\n  }\n  ngOnInit() {\n    if(sessionStorage.typeVar){\nthis.routeToUser(sessionStorage.typeVar)\n}\nthis.currentDate= new Date();\n}\nrouteToUser(typeVar){\n  switch(typeVar){\n    case \"ADMINISTRATOR\":\n      this.router.navigate([\"/admin\"])\n      break;\n      case \"CUSTOMER\":\n        this.router.navigate([\"/customer\"])\n        break;\n        case \"COMPANY\":\n          this.router.navigate([\"/company\"])\n          break;\n\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9hZG1pbk1ldGhvZHMvYWRkLWNvbXBhbnkvYWRkLWNvbXBhbnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Company } from 'src/app/models/Company';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-company',\n  templateUrl: './add-company.component.html',\n  styleUrls: ['./add-company.component.css']\n})\nexport class AddCompanyComponent implements OnInit {\n  \ncompany: Company = new Company();\n  constructor(private service: AdminService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  public createCompany(): void{\n    this.service.addCompany(this.company).subscribe(comp =>{\n      if(comp){\n        alert( comp.name+ \" has been added\")\n        \n      }\n      else{\n        alert(comp.name +\" the company has not been added\")\n      }\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9hZG1pbk1ldGhvZHMvYWRkLWN1c3RvbWVyL2FkZC1jdXN0b21lci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\nimport { Customer } from 'src/app/models/Customer';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent implements OnInit {\ncustomer : Customer = new Customer;\n  constructor(private service: AdminService, private router: Router) { }\n\n  ngOnInit() {\n  }\npublic createCustomer(): void{\n  this.service.addCustomer(this.customer).subscribe(cust=>{\n    if(cust){\nalert(cust.firstName +\" has been added\")    }\nelse{alert(cust.firstName+ \" has not been added\")}\n  });\n\n};\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9hZG1pbk1ldGhvZHMvZGVsZXRlLWNvbXBhbnkvZGVsZXRlLWNvbXBhbnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Company } from 'src/app/models/Company';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-delete-company',\n  templateUrl: './delete-company.component.html',\n  styleUrls: ['./delete-company.component.css']\n})\nexport class DeleteCompanyComponent implements OnInit {\ncompany: Company = new Company();\n  constructor(private service: AdminService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  public deleteCompany(id: number): void {\n    var result= confirm(\"are you sure you want to delete\"+ this.company.name+\"?\");\n    if(result){\n      this.service.deleteCompany(id).subscribe( () => {\n        this.ngOnInit();\n      });\n    }\n    \n\n    \n\n  };\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9hZG1pbk1ldGhvZHMvZGVsZXRlLWN1c3RvbWVyL2RlbGV0ZS1jdXN0b21lci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\nimport { Customer } from 'src/app/models/Customer';\n\n@Component({\n  selector: 'app-delete-customer',\n  templateUrl: './delete-customer.component.html',\n  styleUrls: ['./delete-customer.component.css']\n})\nexport class DeleteCustomerComponent implements OnInit {\n  customer: Customer = new Customer();\n    constructor(private service: AdminService, private router: Router) { }\n  \n    ngOnInit() {\n    }\n    public deleteCustomer(customer: Customer): void {\n      var result= confirm(\"are you sure you want to delete\"+ this.customer.firstName+\"?\");\n      if(result){\n        this.service.deleteCustomer(this.customer).subscribe( () => {\n          this.ngOnInit();\n        });\n      }\n      \n  \n      \n  \n    };\n  \n  }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9hZG1pbk1ldGhvZHMvZ2V0LWFsbC1jb21wYW5pZXMvZ2V0LWFsbC1jb21wYW5pZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/models/Company';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-get-all-companies',\n  templateUrl: './get-all-companies.component.html',\n  styleUrls: ['./get-all-companies.component.css']\n})\nexport class GetAllCompaniesComponent implements OnInit {\n\n  public companies: Company[];\n  public company: Company;\n  public updater: boolean;\n\n  constructor(private service: AdminService, private route: Router) { }\n\n  ngOnInit() {\n    this.service.getAllCompanies().subscribe((comp)=>{\n      this.companies = comp;\n    });\n  }\n\n public deleteCompany(id: number): void{\n     this.service.deleteCompany(id).subscribe(()=>{\n     });\n     this.ngOnInit();\n   }\n   public updateCompany(company: Company){\n     this.service.updateCompany(this.company).subscribe((comp)=>{\n       \n      });\n      this.ngOnInit(); \n\n      this.company.email=company.email;\n  }\n   public editorEnabler(company){\n     this.company=company;\n     if(this.updater==false){\n       this.updater=true;\n     }else{\n       this.updater=false;\n     }\n   }\n\n \n  \n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9hZG1pbk1ldGhvZHMvZ2V0LWFsbC1jdXN0b21lcnMvZ2V0LWFsbC1jdXN0b21lcnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\nimport { Customer } from 'src/app/models/Customer';\n\n@Component({\n  selector: 'app-get-all-customers',\n  templateUrl: './get-all-customers.component.html',\n  styleUrls: ['./get-all-customers.component.css']\n})\nexport class GetAllCustomersComponent implements OnInit {\n\n  public customers: Customer[];\n  public customer: Customer;\n  public updater: boolean;\n\n  constructor(private service: AdminService, private router: Router) { }\n\n  ngOnInit() {\n      this.service.getAllCustomers().subscribe((cust) =>{\n        this.customers = cust;\n      });\n\n  \n     \n  }\n  public deleteCustomer(customer: Customer): void{\n    this.service.deleteCustomer(customer).subscribe(()=>{this.ngOnInit();\n    });\n    this.ngOnInit();\n  }\n  // public deleteCustomer(customer: Customer): void{\n  //     this.service.deleteCustomer(customer).subscribe(()=>{this.ngOnInit();{\n\n  //     } }); \n  //   }\n    public updateCustomer(customer: Customer){\n      this.service.updateCustomer(this.customer).subscribe((cust)=>{\n\n      });\n      this.ngOnInit();\n    }\n    public editorEnabler(customer){\n      this.customer=customer;\n      if(this.updater==false){\n        this.updater=true;\n      }else{\n        this.updater=false;\n      }\n    }\n \n  \n   \n \n }\n  \n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9hZG1pbk1ldGhvZHMvZ2V0LW9uZS1jb21wYW55L2dldC1vbmUtY29tcGFueS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/models/Company';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-get-one-company',\n  templateUrl: './get-one-company.component.html',\n  styleUrls: ['./get-one-company.component.css']\n})\nexport class GetOneCompanyComponent implements OnInit {\ncompany: Company = new Company()\n  constructor(private service: AdminService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  public getOneCompany(id: number): void{\n    \n    this.service.getOneCompany(id).subscribe(comp =>{\n      if(comp){\n        \n        alert(comp)\n      }else{\n        alert(\"company has not found\")\n      }\n    });\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9hZG1pbk1ldGhvZHMvZ2V0LW9uZS1jdXN0b21lci9nZXQtb25lLWN1c3RvbWVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/models/Customer';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-get-one-customer',\n  templateUrl: './get-one-customer.component.html',\n  styleUrls: ['./get-one-customer.component.css']\n})\nexport class GetOneCustomerComponent implements OnInit {\nprivate customer: Customer = new Customer();\n  constructor(private service: AdminService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  public getOneCustomer(id: number): void{\n    this.service.getOneCustomer(this.customer.id).subscribe(cust =>{\n      if(cust){\n        alert(cust)\n      }else{alert(\"customer not found\")}\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9hZG1pbk1ldGhvZHMvdXBkYXRlLWNvbXBhbnkvdXBkYXRlLWNvbXBhbnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/models/Company';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Customer } from 'src/app/models/Customer';\n\n@Component({\n  selector: 'app-update-company',\n  templateUrl: './update-company.component.html',\n  styleUrls: ['./update-company.component.css']\n})\nexport class UpdateCompanyComponent implements OnInit {\ncompany: Company = new Company();\n  constructor(private service: AdminService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  public updateCompany(company: Company){\n    this.service.updateCompany(company).subscribe(comp => {\n      alert(\"the company has been updated\")\n    });\n  }\n\n\nloadComp(id:number){\n    this.service.getOneCompany(id).subscribe(comp=>{this.company=comp});\n}\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9hZG1pbk1ldGhvZHMvdXBkYXRlLWN1c3RvbWVyL3VwZGF0ZS1jdXN0b21lci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/models/Customer';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-customer',\n  templateUrl: './update-customer.component.html',\n  styleUrls: ['./update-customer.component.css']\n})\nexport class UpdateCustomerComponent implements OnInit {\ncustomer: Customer = new Customer();\n  constructor(private service: AdminService, private router: Router) { }\n\n  ngOnInit() {\n  }\npublic updateCustomer(customer: Customer): void{\n  this.service.updateCustomer(customer).subscribe(cust => {\n    if(cust){this.router.navigate([\"/getAllCustomers\"])}\n  })\n}\n}\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { Coupon } from 'src/app/models/Coupon';\r\n@Pipe({\r\n    name: 'categoryFilter'\r\n})\r\nexport class categoryFilterPipe implements PipeTransform{\r\n    transform(coupons: Coupon[], searchTerm: string): Coupon[]{\r\n        if (!coupons || !searchTerm){\r\n            return coupons;\r\n        }\r\n        return coupons.filter(coup => coup.category.toLowerCase().indexOf(searchTerm.toLowerCase()) ! == 0);\r\n\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jb21wYW55TWV0aG9kcy9hZGQtY291cG9uL2FkZC1jb3Vwb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/models/Coupon';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { Router } from '@angular/router';\nimport { Company } from 'src/app/models/Company';\n\n\n@Component({\n  selector: 'app-add-coupon',\n  templateUrl: './add-coupon.component.html',\n  styleUrls: ['./add-coupon.component.css']\n})\nexport class AddCouponComponent implements OnInit {\n  coupon: Coupon = new Coupon;\n  public company: Company;\n  \n  constructor(private service: CompanyService, private router: Router) { }\n\n  ngOnInit() {\n\n    \n  }\n\n  \n  public createCoupon(): void{\n    this.coupon.company=this.company;\n    this.service.addCoupon(this.coupon).subscribe(coup =>{\n      if(coup){\n        coup.company=this.company\n        \n        alert(coup.title+ \" coupon has been added\")\n        \n\n      }\n      else{\n        alert(\" the coupon has not been added\")\n      }\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jb21wYW55TWV0aG9kcy9kZWxldGUtY291cG9uL2RlbGV0ZS1jb3Vwb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/models/Coupon';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-delete-coupon',\n  templateUrl: './delete-coupon.component.html',\n  styleUrls: ['./delete-coupon.component.css']\n})\nexport class DeleteCouponComponent implements OnInit {\n  coupon: Coupon = new Coupon();\n  constructor(private service: CompanyService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  public deleteCompany(id: number): void {\n    var result= confirm(\"are you sure you want to delete\"+ this.coupon.title+\"?\");\n    if(result){\n      this.service.deleteCoupon(id).subscribe( () => {\n        this.ngOnInit();\n      });\n    }\n    \n\n    \n\n  };\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jb21wYW55TWV0aG9kcy9nZXQtY29tcGFueS1jb3Vwb25zLWNhdGVnb3J5L2dldC1jb21wYW55LWNvdXBvbnMtY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { Router } from '@angular/router';\nimport { Coupon } from 'src/app/models/Coupon';\n\n@Component({\n  selector: 'app-get-company-coupons-category',\n  templateUrl: './get-company-coupons-category.component.html',\n  styleUrls: ['./get-company-coupons-category.component.css']\n})\nexport class GetCompanyCouponsCategoryComponent implements OnInit {\n  public coupons: Coupon[];\n  public category: string;\n\n  constructor(private service: CompanyService, private route: Router) { }\n\n  ngOnInit() {\n    // this.service.getCompanyCoupons(this.category).subscribe((coup)=>{\n     this.service.getCompanyCoupons().subscribe((coup)=>{\n      this.coupons = coup;\n    });\n  }\n public deleteCoupon(id: number): void{\n   var result = confirm(\"Are you sure you would like to delete this Coupon?\");\n   if(result){\n     this.service.deleteCoupon(id).subscribe(()=>{\n       this.ngOnInit();\n     });\n   }\n }\n  \n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jb21wYW55TWV0aG9kcy9nZXQtY29tcGFueS1jb3Vwb25zLXByaWNlL2dldC1jb21wYW55LWNvdXBvbnMtcHJpY2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/models/Coupon';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-get-company-coupons-price',\n  templateUrl: './get-company-coupons-price.component.html',\n  styleUrls: ['./get-company-coupons-price.component.css']\n})\nexport class GetCompanyCouponsPriceComponent implements OnInit {\n  public price: number;\n  public coupons: Coupon[];\n\n  constructor(private service: CompanyService, private route: Router) { }\n\n  ngOnInit() {\n    this.service.getCouponsByPrice(this.price).subscribe((coup)=>{\n      this.coupons = coup;\n    });\n  }\n public deleteCoupon(id: number): void{\n   var result = confirm(\"Are you sure you would like to delete this Coupon?\");\n   if(result){\n     this.service.deleteCoupon(id).subscribe(()=>{\n       this.ngOnInit();\n     });\n   }\n }\n  \n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jb21wYW55TWV0aG9kcy9nZXQtY29tcGFueS1jb3Vwb25zL2dldC1jb21wYW55LWNvdXBvbnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/models/Coupon';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-get-company-coupons',\n  templateUrl: './get-company-coupons.component.html',\n  styleUrls: ['./get-company-coupons.component.css']\n})\nexport class GetCompanyCouponsComponent implements OnInit {\n  public coupons: Coupon[];\n  public coupon: Coupon;\n  public updater: boolean;\n  public category: string;\n  public searchTerm: string;\n  public searchPrice: string;\n\n  constructor(private service: CompanyService, private route: Router) { }\n\n  ngOnInit() {\n    this.service.getCompanyCoupons().subscribe((coup)=>{\n      this.coupons = coup;\n      \n    });\n  }\n\n public deleteCoupon(id: number): void{\n     this.service.deleteCoupon(id).subscribe(()=>{\n    });\n    this.ngOnInit();{\n      alert(\"press one more time to delete\")\n      \n    }\n   \n }\n public updateCoupon(coupon: Coupon){\n   this.service.updateCoupon(this.coupon).subscribe((coup)=>{\n\n   });\n   this.ngOnInit();\n }\n  public editorEnabler(coupon){\n    this.coupon=coupon;\n    if(this.updater==false){\n      this.updater=true;\n    }else{\n      this.updater=false;\n    }\n  }\n  public categoryFilter(category: string){\n    this.service.getCouponsByCategory(category).subscribe((cat)=>{\n\n    });\n    this.ngOnInit();\n  }\n  \n  public priceFilter(price: number){\n    this.service.getCouponsByPrice(price).subscribe((price)=>{\n\n    });\n    this.ngOnInit();\n  }\n  \n}\n\n\n\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jb21wYW55TWV0aG9kcy91cGRhdGUtY291cG9uL3VwZGF0ZS1jb3Vwb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/models/Coupon';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-coupon',\n  templateUrl: './update-coupon.component.html',\n  styleUrls: ['./update-coupon.component.css']\n})\nexport class UpdateCouponComponent implements OnInit {\ncoupon: Coupon = new Coupon();\n  constructor(private service: CompanyService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  public updateCompany(company: Coupon): void{\n    this.service.updateCoupon(this.coupon).subscribe(coup => {\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jdXN0b21lck1ldGhvZHMvZ2V0LWFsbC1jb3Vwb25zL2dldC1hbGwtY291cG9ucy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/models/Coupon';\nimport { Customer } from 'src/app/models/Customer';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-get-all-coupons',\n  templateUrl: './get-all-coupons.component.html',\n  styleUrls: ['./get-all-coupons.component.css']\n})\nexport class GetAllCouponsComponent implements OnInit {\n\n    public coupons: Coupon[];\n    public customers: Customer[];\n  \n    constructor(private service: CustomerService, private route: Router) { }\n  \n    ngOnInit() {\n      this.service.getAllCoupons().subscribe((coup)=>{\n        this.coupons = coup;\n      });\n    }}\n    ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jdXN0b21lck1ldGhvZHMvZ2V0LWN1c3RvbWVyLWNvdXBvbnMtY2F0ZWdvcnkvZ2V0LWN1c3RvbWVyLWNvdXBvbnMtY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { Coupon } from 'src/app/models/Coupon';\nimport { Customer } from 'src/app/models/Customer';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-get-customer-coupons-category',\n  templateUrl: './get-customer-coupons-category.component.html',\n  styleUrls: ['./get-customer-coupons-category.component.css']\n})\nexport class GetCustomerCouponsCategoryComponent implements OnInit {\n  public coupons: Coupon[];\n  public customers: Customer[];\n  public category: string;\n\n  constructor(private service: CustomerService, private route: Router) { }\n\n  ngOnInit() {\n     this.service.getCustomerCouponsByCategory(this.category).subscribe((coup)=>{\n      this.coupons = coup;\n    });\n  }\n\n  \n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jdXN0b21lck1ldGhvZHMvZ2V0LWN1c3RvbWVyLWNvdXBvbnMtcHJpY2UvZ2V0LWN1c3RvbWVyLWNvdXBvbnMtcHJpY2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/models/Coupon';\nimport { Customer } from 'src/app/models/Customer';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-get-customer-coupons-price',\n  templateUrl: './get-customer-coupons-price.component.html',\n  styleUrls: ['./get-customer-coupons-price.component.css']\n})\nexport class GetCustomerCouponsPriceComponent implements OnInit {\n  public price: number;\n  public coupons: Coupon[];\n  public customers: Customer[];\n\n  constructor(private service: CustomerService, private route: Router) { }\n\n  ngOnInit() {\n    this.service.getCustomerCouponsByPrice(this.price).subscribe((coup)=>{\n      this.coupons = coup;\n    });\n  }\n\n  \n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jdXN0b21lck1ldGhvZHMvZ2V0LWN1c3RvbWVyLWNvdXBvbnMvZ2V0LWN1c3RvbWVyLWNvdXBvbnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/models/Customer';\nimport { Coupon } from 'src/app/models/Coupon';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-get-customer-coupons',\n  templateUrl: './get-customer-coupons.component.html',\n  styleUrls: ['./get-customer-coupons.component.css']\n})\nexport class GetCustomerCouponsComponent implements OnInit {\n  public coupons: Coupon[];\n  public coupon: Coupon;\n  public customers: Customer[];\n\n  constructor(private service: CustomerService, private route: Router) { }\n\n  ngOnInit() {\n    this.service.getCustomerCoupons().subscribe((coup)=>{\n      this.coupons = coup;\n    });\n  }\n\n\n\n  \n\n}","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWV0aG9kcy9jdXN0b21lck1ldGhvZHMvZ2V0LWN1c3RvbWVyLWRldGFpbHMvZ2V0LWN1c3RvbWVyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from 'src/app/models/Customer';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-get-customer-details',\n  templateUrl: './get-customer-details.component.html',\n  styleUrls: ['./get-customer-details.component.css']\n})\nexport class GetCustomerDetailsComponent implements OnInit {\n  private customer: Customer= new Customer();\n  constructor(private service: CustomerService, private router: Router) { }\n\n  ngOnInit() {\n    this.service.getCustomerDetails().subscribe(cust=>{\nthis.customer= cust;\n\n// (cust.id);\n// (cust.email);\n// (cust.firstName);\n// (cust.lastName);\n// (cust.password);\n    });\n  }\n  // public getOneCustomer(id: number): void{\n  //   this.customer.id= id;\n  //   this.service.getCustomerDetails().subscribe(cust =>{\n\n  //   })\n  // }\n\n}\n","module.exports = \"body{\\r\\n    overflow: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9tZXRob2RzL2N1c3RvbWVyTWV0aG9kcy9wdXJjaGFzZS1jb3Vwb24vcHVyY2hhc2UtY291cG9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9tZXRob2RzL2N1c3RvbWVyTWV0aG9kcy9wdXJjaGFzZS1jb3Vwb24vcHVyY2hhc2UtY291cG9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5e1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Coupon } from 'src/app/models/Coupon';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-purchase-coupon',\n  templateUrl: './purchase-coupon.component.html',\n  styleUrls: ['./purchase-coupon.component.css']\n})\nexport class PurchaseCouponComponent implements OnInit {\n  public coupons: Coupon[];\n  public coupon: Coupon;\n  public category: string;\n  public searchTerm: string;\n  public searchPrice: string;\n  \n  constructor(private service: CustomerService, private route: Router) { }\n\n  ngOnInit() {\n    this.service.getAllCoupons().subscribe(\n      coup=>{\n      this.coupons = coup; \n    },\n  \n    );\n  }\n\n public purchaseCoupon(coupon:Coupon): void{\n     this.service.purchaseCoupon(coupon).subscribe(()=>{\n    });\n    this.ngOnInit();{\n    alert(\"purchased\")\n  }\n }\n \n  \n  public categoryFilter(category: string){\n    this.service.getCustomerCouponsByCategory(category).subscribe((cat)=>{\n\n    });\n    this.ngOnInit();\n  }\n  \n  public priceFilter(price: number){\n    this.service.getCustomerCouponsByPrice(price).subscribe((price)=>{\n\n    });\n    this.ngOnInit();\n  }\n  \n}\n\n\n\n\n\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { Coupon } from 'src/app/models/Coupon';\r\n@Pipe({\r\n    name: 'priceFilter'\r\n})\r\nexport class priceFilterPipe implements PipeTransform {\r\n    transform(coupons: Coupon[], searchPrice: number): Coupon[] {\r\n        if (!coupons || !searchPrice) {\r\n            return coupons;\r\n        }\r\n        return coupons.filter(coup => coup.price > searchPrice);\r\n\r\n    }\r\n}","import { Coupon } from './Coupon';\r\n\r\nexport class Company{\r\n    constructor(public id?:number, public name?: string, public email?: string, public password?: string,\r\n         public coupons?: Coupon[]){}\r\n        \r\n    \r\n        }","import { CompanyComponent } from '../components/company/company.component';\r\nimport { Customer } from './Customer';\r\nimport { Company } from './Company';\r\n\r\n\r\nexport class Coupon{\r\n    constructor(public id?: number, public company?: Company, public category?: string,\r\n         public title?: string, public description?: string, public startDate?: Date,\r\n          public endDate?: Date, public amount?: number, public price?: number, public image?: string){}\r\n}","import { Coupon } from './Coupon';\r\n\r\nexport class Customer{\r\n    constructor(public id?: number, public firstName?: string, public lastName?: string,\r\n         public email?: string, public password?: string, public coupons?: Coupon[]){}\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Company } from '../models/Company';\nimport { Customer } from '../models/Customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private client: HttpClient) { }\n  public addCompany(company: Company): Observable<Company>{\n    return this.client.post<Company>(\"http://localhost:8080/admin/addCompany/\" +sessionStorage.token , company);\n  }\n  public addCustomer(customer: Customer): Observable<Customer>{\n    return this.client.post<Customer>(\"http://localhost:8080/admin/addCustomer/\"+ sessionStorage.token, customer);\n  }\n  public deleteCompany(id: number): Observable<Company>{\n    return this.client.delete<Company>(\"http://localhost:8080/admin/deleteCompany/\"+id+\"/\"+ sessionStorage.token);\n  }\n  public deleteCustomer(customer:Customer): Observable<Customer>{\n    return this.client.post<Customer>(\"http://localhost:8080/admin/deleteCustomer/\"+ sessionStorage.token, customer);\n  }\n  public getAllCompanies(): Observable<Company[]>{\n    return this.client.get<Company[]>(\"http://localhost:8080/admin/getAllComp/\"+ sessionStorage.token);\n  }\n  public getAllCustomers(): Observable<Customer[]>{\n    return this.client.get<Customer[]>(\"http://localhost:8080/admin/getAllCus/\"+ sessionStorage.token);\n\n  }\n  public getOneCompany(id: number): Observable<Company>{\n    return this.client.get<Company>(\"http://localhost:8080/admin/getOneCompany/\"+ sessionStorage.token+\"/\"+ id+\"/\");\n  }\n  public getOneCustomer(id: number): Observable<Customer>{\n    return this.client.get<Customer>(\"http://localhost:8080/admin/getOneCustomer/\"+ sessionStorage.token+\"/\"+ id+\"/\");\n  }\n  public updateCompany(company: Company): Observable<Company>{\n    return this.client.put<Company>(\"http://localhost:8080/admin/updateCompany/\" +sessionStorage.token, company);\n  } \n  public updateCustomer(customer: Customer): Observable<Customer>{\n    return this.client.put<Customer>(\"http://localhost:8080/admin/updateCustomer/\" +sessionStorage.token, customer);\n  } \n   \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Coupon } from '../models/Coupon';\nimport { Company } from '../models/Company';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n\n  constructor(private client: HttpClient) { }\n  public getCompanyCoupons(): Observable<Coupon[]>{\n    return this.client.get<Coupon[]>(\"http://localhost:8080/company/getCompanyCoupons/\"+ sessionStorage.token);\n  }\n  public addCoupon(coupon: Coupon): Observable<Coupon>{\n    return this.client.post<Coupon>(\"http://localhost:8080/company/addCoupon/\"+sessionStorage.token, coupon);\n  }\n  public deleteCoupon(id: number): Observable<Coupon>{\n    return this.client.delete<Coupon>(\"http://localhost:8080/company/deleteCoupon/\"+sessionStorage.token+\"/\"+id+\"/\");\n\n  }\n  public getCouponsByCategory(category: string): Observable<Coupon[]>{\n    return this.client.get<Coupon[]>(\"http://localhost:8080/company/getCompanyCouponsByCat/\"+ sessionStorage.token+\"/\"+ category+\"/\");\n  }\n  public getCouponsByPrice(price: number): Observable<Coupon[]>{\n    return this.client.get<Coupon[]>(\"http://localhost:8080/company/getCompanyCouponsPrice/\"+ sessionStorage.token +\"/\"+price+\"/\");\n  }\n  public updateCoupon(coupon: Coupon): Observable<Coupon>{\n    return this.client.put<Coupon>(\"http://localhost:8080/company/updateCoupon/\"+sessionStorage.token, coupon);\n  }\npublic getCompanyDetails(company: Company): Observable<any>{\n  return this.client.get<any>(\"http://localhost:8080/company/getCompanyDetails/\"+ sessionStorage.token+ \"/\");\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Coupon } from '../models/Coupon';\nimport { Customer } from '../models/Customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private client: HttpClient) { }\n  public getCustomerCoupons(): Observable<Coupon[]>{\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/getCustomerCoupons/\"+sessionStorage.token);\n  }\n  public getCustomerCouponsByCategory(category: string): Observable<Coupon[]>{\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/getCustomerCouponsCat/\"+sessionStorage.token+\"/\"+ category+\"/\");\n  }\n  public getCustomerCouponsByPrice(price: number): Observable<Coupon[]>{\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/getCustomerCouponsPrice/\"+sessionStorage.token+\"/\"+ price+\"/\");\n  }\n  public getCustomerDetails(): Observable<Customer>{\n    return this.client.get<Customer>(\"http://localhost:8080/customer/getCustomerDetails/\"+sessionStorage.token);\n  }\n  public purchaseCoupon(coupon: Coupon): Observable<Coupon>{\n    return this.client.post<Coupon>(\"http://localhost:8080/customer/purchaseCoupon/\"+sessionStorage.token, coupon);\n  }\n  public getAllCoupons(): Observable<Coupon[]>{\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/getAllCoupons/\"+sessionStorage.token);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private client: HttpClient) { }\n  public login(email: string, password: string, type: string) :Observable<any>{\n    return this.client.post<any>(\"http://localhost:8080/login?email=\"+ email  + \"&password=\"\n    + password+ \"&type=\" +type, \"\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}